#!/usr/bin/env node

/**
 * Interactive setup script for creating .env file with Apple credentials
 */

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

const envPath = path.join(__dirname, "..", ".env");

console.log("🔧 Downlodr macOS Code Signing Setup\n");
console.log(
  "This script will help you create a .env file with your Apple credentials."
);
console.log(
  "These credentials are needed for code signing and notarization.\n"
);

// Check if .env already exists
if (fs.existsSync(envPath)) {
  console.log("⚠️  Warning: .env file already exists.");
  rl.question("Do you want to overwrite it? (y/N): ", (answer) => {
    if (answer.toLowerCase() !== "y") {
      console.log("Setup cancelled.");
      process.exit(0);
    }
    startSetup();
  });
} else {
  startSetup();
}

function startSetup() {
  console.log("\n📋 Please have the following information ready:");
  console.log("1. Your Apple ID (email address)");
  console.log("2. An app-specific password from https://appleid.apple.com");
  console.log("3. Your Team ID (visible in your certificates)\n");

  const config = {};

  rl.question("Enter your Apple ID (email): ", (appleId) => {
    config.APPLE_ID = appleId;

    console.log("\n📱 App-specific password:");
    console.log("1. Go to https://appleid.apple.com/account/manage");
    console.log("2. Sign in and go to Security > App-Specific Passwords");
    console.log('3. Generate a password named "Downlodr Notarization"\n');

    rl.question(
      "Enter your app-specific password (xxxx-xxxx-xxxx-xxxx): ",
      (password) => {
        config.APPLE_PASSWORD = password;

        // Default Team ID based on the certificates we found
        console.log("\n🏢 Team ID (default: 36J4F965UC)");
        rl.question(
          "Enter your Team ID or press Enter for default: ",
          (teamId) => {
            config.APPLE_TEAM_ID = teamId || "36J4F965UC";

            // Default certificates based on what we found
            config.APPLE_IDENTITY =
              "Developer ID Application: Magtangol Roque (36J4F965UC)";
            config.APPLE_PKG_IDENTITY =
              "Developer ID Installer: Magtangol Roque (36J4F965UC)";

            // Write the .env file
            const envContent = `# Apple Developer Credentials for Code Signing and Notarization
# Generated by setup-env.js on ${new Date().toISOString()}

# Your Apple ID (email address)
APPLE_ID=${config.APPLE_ID}

# App-specific password from appleid.apple.com
APPLE_PASSWORD=${config.APPLE_PASSWORD}

# Your Team ID
APPLE_TEAM_ID=${config.APPLE_TEAM_ID}

# Developer ID Application certificate for app signing
APPLE_IDENTITY="${config.APPLE_IDENTITY}"

# Developer ID Installer certificate for PKG signing
APPLE_PKG_IDENTITY="${config.APPLE_PKG_IDENTITY}"
`;

            fs.writeFileSync(envPath, envContent);
            console.log("\n✅ .env file created successfully!");
            console.log("\n📋 Next steps:");
            console.log("1. Run: node scripts/build-macos-signed.js");
            console.log("2. The build will be signed AND notarized");
            console.log(
              "3. Users will be able to install without security warnings\n"
            );

            rl.close();
          }
        );
      }
    );
  });
}
