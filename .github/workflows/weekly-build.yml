name: Weekly Build

permissions:
  contents: write

on:
  schedule:
    # Run every Friday at 1 PM UTC
    - cron: '0 13 * * 5'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: experimental
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'yarn'
      
      - name: Clean up conflicting lockfiles
        run: |
          if (Test-Path "package-lock.json") {
            Remove-Item "package-lock.json" -Force
            Write-Host "Removed conflicting package-lock.json"
          }
        shell: pwsh

      - name: Clean Yarn cache
        run: yarn cache clean
        
      - name: Install dependencies
        run: |
          if (Test-Path "yarn.lock") {
            Write-Host "Found yarn.lock, installing with frozen lockfile..."
            yarn install --frozen-lockfile --network-timeout 100000 --network-concurrency 1
          } else {
            Write-Host "No yarn.lock found, generating lockfile..."
            yarn install --network-timeout 100000 --network-concurrency 1
          }
        shell: pwsh
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false
      
      - name: Commit yarn.lock if generated
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if (git diff --name-only | Select-String "yarn.lock") {
            Write-Host "yarn.lock was modified, committing changes..."
            git add yarn.lock
            git commit -m "Update yarn.lock [skip ci]"
            git push
          } else {
            Write-Host "No changes to yarn.lock"
          }
        shell: pwsh
      
      - name: Build Electron app
        run: yarn make
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: downlodr-windows-${{ github.run_number }}
          path: out/make/**/*
          retention-days: 30
  
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: experimental
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: downlodr-windows-${{ github.run_number }}
          path: ./artifacts
      
      - name: Get version from package.json
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Get commit info
        id: commit
        run: |
          echo "sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
      
      - name: Extract changelog for current version
        id: changelog
        run: |
          # Extract unreleased changes from CHANGELOG.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          awk '/^## \[Unreleased\]/{flag=1; next} /^## \[/{flag=0} flag && /^### |^- /' CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}-exp
          name: Experimental build v${{ steps.version.outputs.version }} - ${{ steps.commit.outputs.message }}
          body: |
            Automated weekly build of downlodr for Windows
            
            Version: ${{ steps.version.outputs.version }}
            Built on: ${{ steps.date.outputs.date }}
            Commit: ${{ steps.commit.outputs.sha }} - ${{ steps.commit.outputs.message }}

            ## Download Latest Installer
            - [Windows 10 / 11 Installer](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}-exp/Downlodr-${{ steps.version.outputs.version }}-x64.exe)            
            
            ## Changes in this release
            ${{ steps.changelog.outputs.changelog }}
          
          files: ./artifacts/**/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 